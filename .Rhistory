#ets
jeju_ets <- ets(jeju_test)
summary(jeju_ets)
plot(jeju_ets)
View(jeju_ets)
#ets
jeju_ets <- ets(jeju_train)
summary(jeju_ets)
plot(jeju_ets)
jeju_ets_forecast <- forecast(jeju_ets, h = 24)
jeju_ets_forecast
jeju_ets_forecast <- forecast(jeju_ets, h = 43)
jeju_ets_forecast
plot(jeju_ets_forecast)
accuracy(jeju_ets_forecast)
accuracy(jeju_ets_forecast,jeju_test)
#ets damped
jeju_ets_damped <- ets(jeju_test, damped = TRUE)
#ets damped
jeju_ets_damped <- ets(jeju_train, damped = TRUE)
summary(jeju_ets_damped)
plot(jeju_ets_damped)
jeju_ets_damped
jeju_ets_forecast_damped <- forecast(jeju_ets_damped, h = 43)
jeju_ets_forecast_damped
summary(jeju_ets_forecast_damped)
plot(jeju_ets_forecast_damped)
accuracy(jeju_ets_forecast_damped, jeju_train)
accuracy(jeju_ets_forecast_damped, jeju_train)
jeju_ets_forecast_damped
summary(jeju_ets_forecast_damped)
plot(jeju_ets_forecast_damped)
accuracy(jeju_ets_forecast_damped, jeju_train)
accuracy(jeju_ets_forecast_damped, jeju_test)
jeju_hw_damped <- hw(jeju_train, h = 43, seasonal = "additive", initial = "optimal", damped = TRUE) #holt-Winters
jeju_hw_damped
accuracy(jeju_hw, jeju_test)
jeju_hw_damped <- hw(jeju_train, h = 43, seasonal = "multiplicative", initial = "optimal", damped = TRUE) #holt-Winters
jeju_hw_damped
summary(jeju_hw_damped)
#mumtiplicative damped
jeju_ets_damped_mul <- ets(jeju_train, model = "MAM", damped = TRUE)
jeju_ets_damped_mul
#mumtiplicative damped
jeju_ets_damped_mul <- ets(jeju_train, model = "MAM", damped = TRUE)
jeju_ets_damped_mul
jeju_ets_forecast_damped_mul <- forecast(jeju_ets_damped_mul, h = 43)
jeju_ets_forecast_damped_mul
summary(jeju_ets_forecast_damped_mul)
plot(jeju_ets_forecast_damped_mul)
accuracy(jeju_ets_forecast_damped_mul, jeju_test)
summary(jeju_ets_damped)
accuracy(jeju_ets_forecast_damped, jeju_test)
#ets train set
jeju_forecast_ets <- ets(jejuair_ts_new, model = "MAA", damped = TRUE)
jeju_forecast_ets
plot(jeju_forecast_ets)
jeju_forecast_ets_future <- forecast(jeju_forecast_ets, h = 24)
plot(jeju_forecast_ets_future)
summary(jeju_forecast_ets_future)
accuracy(jeju_forecast_ets_future)
#ets train set stats
ets_stats <- jeju_ets_forecast_damped$model$states[,1:3]
colnames(ets_stats) <- c("level", "slope", "seaonal")
plot(ets_stats, main = "ETS(M,Ad,A) Stats")
summary(ets_stats)
plot(jejuair_ts_new, main = "Methods without Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)")
lines(jeju_ses$mean, col = 2)
lines(jeju_holt$mean, col = 3)
lines(jeju_exp$mean, col = 4)
lines(jeju_damped_add$mean, col = 5)
lines(jeju_damped_multi$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,5,6), legend = c("Actual","SES", "Holt's Linear","Exponential", "Additive-damped","Multiplicative-damped"))
plot(jejuair_ts_new, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)")
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets$mean, col = 4)
lines(jeju_ets_damped$mean, col = 5)
legend("topleft", lty = 1, col = c(1,2,3,4,5), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
plot(jejuair_ts_new, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)")
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets$mean, col = 4)
lines(jeju_ets$mean, col = 5)
lines(jeju_ets$mean, col = 6)
plot(jejuair_ts_new, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)")
lines(jeju_ets$mean, col = 6)
lines(jeju_ets_forecast$mean, col = 6)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 5)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
plot(jejuair_ts_new, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)")
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
summary(jeju_forecast_ets_future)
summary(jeju_ets_forecast_damped)
#mumtiplicative trend damped
jeju_ets_damped_mul_1 <- ets(jeju_train, model = "MMA", damped = TRUE)
accuracy(jeju_forecast_ets_future)
#import library and raw data
library(fpp)
#ACF
acf(jejuair_ts_new)
#ACF
acf(data)
#ACF
acf(jejuair)
#ACF
acf(jejuair,xlim=c(0,60))
#ACF
acf(jejuair,lag.max = 60)
#ACF
acf(jejuair,lag.max = 100)
#ACF
pacf(jejuair,lag.max = 100)
#ACF
pacf(jejuair,lag.max = 40)
accuracy(jeju_forecast_ets_future)
summary(jeju_forecast_ets_future)
jeju_forecast_hw_damped_mul
summary(jejU_forecast_hw)
summary(jeju_hw_damped)
summary(jeju_forecast_ets_future)
jeju_hw_damped
summary(jeju_ses)
summary(jeju_holt)
summary(jeju_exp)
summary(jeju_damped_add)
#import library and raw data
library(fpp)
summary(jeju_ses)
summary(jeju_ses)
summary(jeju_holt)
summary(jeju_exp)
summary(jeju_holt)
summary(jeju_ses)
summary(jeju_holt)
summary(jeju_holt)
summary(jeju_exp)
summary(jeju_damped_add)
summary(jeju_damped_multi)
summary(jeju_hw)
summary(jeju_hw_damped)
summary(jeju_ets_forecast)
summary(jeju_ets_damped)
summary(jeju_ets_forecast_damped)
summary(jeju_ets_forecast)
summary(jeju_ets_forecast)
summary(jeju_ets)
summary(jeju_ets)
summary(jeju_ets_forecast)
summary(jeju_ets_forecast_damped)
summary(jeju_ets)
#import library and raw data
library(fpp)
summary(jeju_ses)
summary(jeju_ets_forecast_damped)
#import library and raw data
library(fpp)
#seasonal plot
autoplot(jejuair_ts_new)
#seasonal plot
ggseasonplot(jejuair_ts_new)
#seasonal plot
seasonplot(jejuair_ts_new)
#seasonal plot
ggseasonplot(jejuair_ts_new)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot")
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", type = "o")
?ggseasonplot
#ets(M,A,M) stats
ets_mam_stats <- jeju_ets_forecast$model$states[,1:3]
colnames(ets_mam_stats) <- c ("level","slope","seasonal")
plot(ets_mam_stats, main = "ETS(M,A,M) Stats")
summary(jeju_ets_forecast)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", polar = TRUE)
?ggseasonplot
seasonplot(jejuair_ts_new)
seasonplot(jejuair_ts_new, main = "Seasonal plot of Jeju air passengers", year.labels = TRUE)
seasonplot(jejuair_ts_new, main = "Seasonal plot of Jeju air passengers", year.labels = TRUE, col = c(1,18))
?seasonplot
seasonplot(jejuair_ts_new, main = "Seasonal plot of Jeju air passengers", year.labels = TRUE, season.labels = TRUE)
seasonplot(jejuair_ts_new, main = "Seasonal plot of Jeju air passengers", year.labels = TRUE, season.labels = )
?seasonplot
seasonplot(jejuair_ts_new, main = "Seasonal plot of Jeju air passengers", year.labels = TRUE, col = TRUE)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot",)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", year.labels = TRUE)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", year.labels = TRUE, type = 'o')
?seasonplot
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", year.labels = TRUE)
#seasonal plot
ggseasonplot(jejuair_ts_new, main = "Seasonal plot", year.labels = TRUE, ylab = "Number of air passengers in Jeju (million)")
#linear regression for Q8
lm(jejuair_ts)
lm
lm?
?lm
lm(y~x,jejuair_ts)
#linear regression for Q8
data
#import data
data_reg <- data["numbers"]
data_reg
data_reg <- data.append("time", 1:)
data_reg <- data_reg.append("time", 1:)
ts(jejuair_ts)
plot(ts(jejuair_ts))
#ACF
acf(jejuair_ts)
?acf
#ACF
acf(jejuair_ts,lag.max = 12)
#ACF
acf(jejuair)
#ACF
acf(jejuair_ts[:-1])
#ACF
acf(jejuair_ts[,-1])
#ACF
acf(jejuair_ts["number"])
jejuair_ts
#ACF
acf(jejuair_ts_new["number"])
#ACF
acf(jejuair_ts_new)
#ACF
acf(jejuair_ts_new, lag.plot())
#ACF
acf(jejuair_ts_new, lag.max = 12)
#ACF
acf(jejuair_ts_new)
pacf(jejuair_ts_new)
jejuair_ts
#ACF
acf(jejuair_ts_new$mean)
summary(jejuair_ts_new)
jejuair
#ACF
acf(jejuair[37:])
#ACF
acf(jejuair(37:)
#ACF
acf(jejuair[37:])
jejuair[37:]
jejuair[10]
jejuair[37:]
data_reg
df <- data.frame(y = data_reg, x = 1:)
df <- data.frame(y = c(data_reg), x = (1:))
data_reg["y"] <- data["numbers"]
data_reg
View(data_reg)
data_reg <- drop.scope("numbers")
data_reg.drop["numbers"]
drop(data_reg$numbers)
data_reg
#import data
data_reg["y"] <- data["numbers"]
data_reg
data_reg$numbers = NULL
data_reg
data_reg["x"] <- 1:
data_reg["x"] <- 1:
data_reg
data_reg["x"] <- c(1:)
data_reg
jejuair_ts_new$
jejuair_ts_new$?
jejuair_ts_new$?
?jejuair_ts_new
?jejuair_ts_new
data_reg["x"] <- c("1:")
data_reg
data_reg["x"] <- (1:)
data_reg["x"] <- 1:259
data_reg
plot(data_reg)
scatter.smooth(x = data_reg$x, y = data_reg$y)
scatter.smooth(x = data_reg$x, y = data_reg$y, main = "Number of air passgengers in jeju ~ Time period")
data_reg["y"] <- data_reg$y/1000000
data_reg
scatter.smooth(x = data_reg$x, y = data_reg$y, main = "Number of air passgengers in jeju ~ Time period")
scatter.smooth(x = data_reg$x, y = data_reg$y, main = "Number of air passgengers in jeju (million) ~ Time period")
reg <- lm(data_reg$y ~ data_reg$x)
reg
reg <- lm(data_reg$y ~ data_reg$x, data = data_reg)
reg
print(reg)
summary(reg)
scatter.smooth(x = data_reg$x, y = data_reg$y, main = "Number of air passgengers in jeju (million) ~ Time period", xlab = "Time period", ylab = "Number of air passengers in Jeju (million)")
reg <- lm(data_reg$y ~ data_reg$x, data = data_reg)
reg
summary(reg)
?scatter.smooth
scatter.smooth(x = data_reg$x, y = data_reg$y, main = "Number of air passgengers in jeju (million) ~ Time period", xlab = "Time period", ylab = "Number of air passengers in Jeju (million)")
plot(jejuair_ts_new, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)",ylim = c(0,3.5))
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
#accuracy test
accuracy(jeju_ses, jeju_test)
#import library and raw data
library(fpp)
#linear regression for Q8
reg <- tslm(jejuair_ts ~ trend)
reg
#import data
data_reg["y"] <- data["numbers"]
data_reg$numbers = NULL
data_reg["x"] <- 1:259
data_reg["y"] <- data_reg$y/1000000
data_reg
#import data
data_reg <- data["numbers"]
data_reg["trend"] <- 1:259
data_reg["trend"] <- 1:~
data_reg["y"] <- data_reg$y/1000000
data_reg["trend"] <- 1:
data_reg["y"] <- data_reg$y/1000000
#import data
data_reg <- data["numbers"]
data_reg["trend"] <- 1:
data_reg["numbers"] <- data_reg$numbers/1000000
#import data
data_reg <- data["numbers"]
data_reg["trend"] <- 1:
data_reg["numbers"] <- data_reg$numbers/1000000
data_reg["trend"] <- 1:259
data_reg["numbers"] <- data_reg$numbers/1000000
data_reg
data_reg["seasonality"] <- c(1:12)
repeat
repeat
?repeat
?repeat
?repeat
data_reg["seasonality"] <- repeat(c(1:12))
data_reg
data_reg["seasonality"] <- repeat(c(1:12))
data_reg["seasonality"] <- repeat(c(1:12))
#import data
data_reg <- data["numbers"]
data_reg["seasonality"] <- repeat(c(1:12))
data_reg["seasonality"] <- (c(1:12))
data_reg["numbers"] <- data_reg$numbers/1000000
#ACF
acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
tsdisplay(jejuair_ts, main = "Jeju time series display")
#ACF
acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
pacf(jejuair_ts, lag.max = 36, main = "PACF of Jeju air passenger")
tsdisplay(jejuair_ts, main = "Jeju time series display")
#import library and raw data
library(fpp)
tsdisplay(jejuair_ts, main = "Jeju time series display")
#ACF
acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
pacf(jejuair_ts, lag.max = 36, main = "PACF of Jeju air passenger")
tsdisplay(jejuair_ts, main = "Jeju time series display")
data_reg["trend"] <- seq(1:)
data_reg["trend"] <- seq(1:-)
data_reg["trend"] <- seq(1:.)
data_reg["trend"] <- seq(1:~)
data_reg["trend"] <- seq(1:259)
data_reg
?tslm
reg <- tslm(jejuair_ts ~ trend + season)
reg
summary (reg)
reg_forecast <- forecast(reg, h = 24)
reg_forecast
?autoplot
autoplot(reg)
autoplot(reg_forecast)
plot(reg_forecast, )
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)" )
reg <- tslm(jejuair_ts_new ~ trend + season)
summary (reg)
reg_forecast <- forecast(reg, h = 24)
reg_forecast
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)" )
?plot
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)", legend(reg_forecast))
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
autoplot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
autoplot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)",labels(reg_forecast))
autoplot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)",labels(reg_forecast$upper))
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)",labels(reg_forecast$upper))
labels(reg_forecast$upper)
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
ggplot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)", label.curve = TRUE)
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
legend(reg_forecast)
autoplot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
reg_forecast
summary (reg)
reg <- tslm(jejuair_ts_new ~ year + season)
trend
reg <- tslm(jejuair_ts_new ~ trend + season)
summary (reg)
reg_forecast <- forecast(reg, h = 24)
accuracy(reg_forecast)
show(reg_forecast)
formula(reg_forecast)
formula(reg)
summary (reg)
#zoom
jejuair_ts_new_zoom <- window(jejuair_ts_new, start= c(2015,1))
plot(jejuair_ts_new_zoom, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)",ylim = c(1.5,3.5))
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 2, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
#zoom
jejuair_ts_new_zoom <- window(jejuair_ts_new, start= c(2014,1))
plot(jejuair_ts_new_zoom, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)",ylim = c(1.5,3.5), xlim= c(2014,2020))
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
plot(jejuair_ts_new_zoom, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)",ylim = c(1.5,3.5), xlim= c(2014,2019))
#zoom
jejuair_ts_new_zoom <- window(jejuair_ts_new, start= c(2014,1))
plot(jejuair_ts_new_zoom, main = "Methods with Seasonality", xlab = "Time", ylab = "Number of Passenger Arrivals in Jeju(million)",ylim = c(1.5,3.5), xlim= c(2014,2019))
lines(jeju_hw$mean, col = 2)
lines(jeju_hw_damped$mean, col = 3)
lines(jeju_ets_forecast$mean, col = 4)
lines(jeju_ets_forecast_damped$mean, col = 6)
legend("topleft", lty = 1, col = c(1,2,3,4,6), legend = c("Actual","Holt-winter","Holt-winter multiplicative damped","ETS(M,A,M)","ETS(M,Ad,A)"))
#ACF
jeju_acf <- acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
jeju_pacf <- pacf(jejuair_ts, lag.max = 36, main = "PACF of Jeju air passenger")
jeju_acf
summary(jeju_acf)
print(jeju_acf)
jeju_pacf <- pacf(jejuair_ts, lag.max = 36, main = "PACF of Jeju air passenger")
#ACF
jeju_acf <- acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
accuracy(jeju_forecast_ets_future)
#ACF
jeju_acf <- acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
#ACF
jeju_acf <- Acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
#import library and raw data
library(fpp)
#ACF
jeju_acf <- Acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
jeju_pacf <- Pacf(jejuair_ts, lag.max = 36, main = "PACF of Jeju air passenger")
#ACF
jeju_acf <- Acf(jejuair_ts, lag.max = 36, main = "ACF of Jeju air passenger")
reg <- tslm(jejuair_ts_new ~ trend + season, lamda = "auto")
summary (reg)
reg_forecast <- forecast(reg, h = 24)
reg_forecast
plot(reg_forecast, main = "Out of sample forecast for Air passenger in Jeju with linear regression",
xlab = "Year", ylab = "Number of air passengers in Jeju (miilion)")
#import library and raw data
library(fpp)
summary(jeju_ses)
summary(jeju_holt)
summary(jeju_exp)
summary(jeju_damped_add)
summary(jeju_ses)
summary(jeju_holt)
summary(jeju_exp)
summary(jeju_damped_add)
summary(jeju_damped_multi)
summary(jeju_hw)
summary(jeju_ets_forecast)
summary(jeju_ets_forecast_damped)
summary(jeju_hw_damped)
plot(jeju_ets_forecast_damped)
summary(jeju_ets_forecast_damped)
View(jeju_forecast_hw_damped_add)
summary(jeju_ses)
